{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Enums/BlockType.ts","webpack:///./src/app/Enums/CommandType.ts","webpack:///./src/app/Enums/LogType.ts","webpack:///./src/app/Enums/SemaphorOperationType.ts","webpack:///./src/app/Enums/VariableOperationType.ts","webpack:///./src/app/Helper.ts","webpack:///./src/app/Models/BaseLogModel.ts","webpack:///./src/app/Models/BlockModel.ts","webpack:///./src/app/Models/CommandModel.ts","webpack:///./src/app/Models/ExecutableProgramModel.ts","webpack:///./src/app/Models/ExecutionSettingsModel.ts","webpack:///./src/app/Models/InitialValueModel.ts","webpack:///./src/app/Models/LogModel.ts","webpack:///./src/app/Models/LoopBlockModel.ts","webpack:///./src/app/Models/PrintedLogModel.ts","webpack:///./src/app/Models/ProcessBlocksModel.ts","webpack:///./src/app/Models/ProcessCommandsModel.ts","webpack:///./src/app/Models/ProcessCountModel.ts","webpack:///./src/app/Models/ProgramModel.ts","webpack:///./src/app/Models/SemaphorBlockModel.ts","webpack:///./src/app/Models/SemaphoreLogModel.ts","webpack:///./src/app/Models/VariableBlockModel.ts","webpack:///./src/app/Models/VariableLogModel.ts","webpack:///./src/app/api-request.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/block/block.component.css","webpack:///./src/app/block/block.component.html","webpack:///./src/app/block/block.component.ts","webpack:///./src/app/default/default.component.css","webpack:///./src/app/default/default.component.html","webpack:///./src/app/default/default.component.ts","webpack:///./src/app/execution-settings/execution-settings.component.css","webpack:///./src/app/execution-settings/execution-settings.component.html","webpack:///./src/app/execution-settings/execution-settings.component.ts","webpack:///./src/app/preview-dialog/preview-dialog.component.css","webpack:///./src/app/preview-dialog/preview-dialog.component.html","webpack:///./src/app/preview-dialog/preview-dialog.component.ts","webpack:///./src/app/preview/preview.component.css","webpack:///./src/app/preview/preview.component.html","webpack:///./src/app/preview/preview.component.ts","webpack:///./src/app/refresh-button/refresh-button.component.css","webpack:///./src/app/refresh-button/refresh-button.component.html","webpack:///./src/app/refresh-button/refresh-button.component.ts","webpack:///./src/app/settings/settings.component.css","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/simulation/simulation.component.css","webpack:///./src/app/simulation/simulation.component.html","webpack:///./src/app/simulation/simulation.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","﻿export enum BlockType\n{\n    SEMAPHOR,\n    SHARED_VARIABLE,\n    OTHER,\n    LOOP\n}","﻿export enum CommandType\n{   \n    SEMAPHOR_ENTER,\n    SEMAPHOR_EXIT,\n    SHARED_VARIABLE_GET,\n    SHARED_VARIABLE_CALC_SUM,\n    SHARED_VARIABLE_CALC_DIFF,\n    SHARED_VARIABLE_SET,\n    OTHER\n}","﻿export enum LogType\n{\n    SUSPENDED,\n    MOVE,\n    DEADLOCK,\n    GET_VALUE,\n    SET_VALUE,\n    CALC_VALUE,\n    ENTER_REGION,\n    EXIT_REGION,\n    ALL_SUSPENDED,\n    DISPATCHER_SKIP,\n    AWAKE_PROCESS\n}","﻿export enum SemaphorOperationType\n{\n    ENTER,\n    EXIT\n}","﻿export enum VariableOperationType\n{\n    GET,\n    SET,\n    INCREASE,\n    DECREASE\n}","import { BlockModel } from \"./Models/BlockModel\";\nimport { BlockType } from \"./Enums/BlockType\";\nimport { SemaphorBlockModel } from \"./Models/SemaphorBlockModel\";\nimport { VariableBlockModel } from \"./Models/VariableBlockModel\";\nimport { LoopBlockModel } from \"./Models/LoopBlockModel\";\nimport { ProgramModel } from \"./Models/ProgramModel\";\nimport { ExecutableProgramModel } from \"./Models/ExecutableProgramModel\";\nimport { ProcessBlocksModel } from \"./Models/ProcessBlocksModel\";\nimport { ProcessCommandsModel } from \"./Models/ProcessCommandsModel\";\nimport { CommandModel } from \"./Models/CommandModel\";\nimport { CommandType } from \"./Enums/CommandType\";\nimport { SemaphorOperationType } from \"./Enums/SemaphorOperationType\";\nimport { VariableOperationType } from \"./Enums/VariableOperationType\";\nimport { BaseLogModel } from \"./Models/BaseLogModel\";\nimport { LogType } from \"./Enums/LogType\";\nimport { LogModel } from \"./Models/LogModel\";\nimport { SemaphoreLogModel } from \"./Models/SemaphoreLogModel\";\nimport { VariableLogModel } from \"./Models/VariableLogModel\";\n\nexport class Helper\n{\n    public static DeserializeSpecific(obj: any): BlockModel\n    {\n        switch(obj.Type)\n        {\n            case BlockType.OTHER:\n                return BlockModel.Deserialize(obj);\n            case BlockType.SEMAPHOR:\n                return SemaphorBlockModel.Deserialize(obj);\n            case BlockType.SHARED_VARIABLE:\n                return VariableBlockModel.Deserialize(obj);\n            case BlockType.LOOP:\n                return LoopBlockModel.Deserialize(obj);\n        }\n    }\n\n    private static MergeArrays(target: CommandModel[], from: CommandModel[]): void\n    {\n        from.forEach(el=>{target.push(el)});\n    }\n\n    public static Convert(program: ProgramModel): ExecutableProgramModel\n    {\n        let retModel: ExecutableProgramModel = new ExecutableProgramModel();\n        retModel.Name = program.Name;\n\n        program.Processes.forEach(process => {\n            let pcm: ProcessCommandsModel = new ProcessCommandsModel();\n            pcm.Name = process.Name;\n            pcm.Commands = Helper.InternalConvert(process.Blocks)\n\n            retModel.Add(pcm);\n        });\n\n        return retModel;\n    }\n    \n    private static InternalConvert(blocks: BlockModel[]): CommandModel[]\n    {\n        let commands: CommandModel[] = [];\n\n        blocks.forEach(block=>{\n            switch (block.Type)\n            {\n                case BlockType.LOOP:\n                    Helper.MergeArrays(commands, Helper.InternalConvertLoop(<LoopBlockModel>block));\n                    break;\n                case BlockType.SEMAPHOR:\n                    commands.push(Helper.InternalConvertSemaphore(<SemaphorBlockModel>block));\n                    break;\n                case BlockType.SHARED_VARIABLE:\n                    Helper.MergeArrays(commands, Helper.InternalConvertVariable(<VariableBlockModel>block));\n                    break;\n                case BlockType.OTHER:\n                    let cmd: CommandModel = new CommandModel();\n                    cmd.Type = CommandType.OTHER;\n\n                    commands.push(cmd);\n                    break;\n            }\n        })\n\n        return commands;\n    }\n\n    private static InternalConvertSemaphore(SemaphorBlock: SemaphorBlockModel): CommandModel\n    {\n        let cmd: CommandModel = new CommandModel();\n\n        cmd.Variable = SemaphorBlock.SemaphorName;\n        cmd.Type = SemaphorBlock.SemaphorOperation == SemaphorOperationType.ENTER ? CommandType.SEMAPHOR_ENTER : CommandType.SEMAPHOR_EXIT;\n\n        return cmd;\n    }\n\n    private static InternalConvertLoop(loopBlock: LoopBlockModel): CommandModel[]\n    {\n        let commands: CommandModel[] = [];\n\n        for (let i=0;i<loopBlock.Iterations;i++)\n        {\n            Helper.MergeArrays(commands, Helper.InternalConvert(loopBlock.Children));\n        }\n\n        return commands;\n    }\n\n    private static InternalConvertVariable(variableBlock: VariableBlockModel): CommandModel[]\n    {\n        let commands: CommandModel[] = [];\n        let cmd: CommandModel;\n        \n        switch(variableBlock.VariableOperationType)\n        {\n            case VariableOperationType.GET:\n                cmd = new CommandModel();\n             \n                cmd.Variable = variableBlock.VariableName;\n                cmd.Type = CommandType.SHARED_VARIABLE_GET;\n\n                commands.push(cmd);\n                break;\n            case VariableOperationType.SET:\n                cmd = new CommandModel();\n            \n                cmd.Variable = variableBlock.VariableName;\n                cmd.Type = CommandType.SHARED_VARIABLE_SET;\n                cmd.Value = variableBlock.Value;\n\n                commands.push(cmd);\n                break;\n            case VariableOperationType.INCREASE:\n            case VariableOperationType.DECREASE:\n                cmd = new CommandModel();\n                \n                cmd.Variable = variableBlock.VariableName;\n                cmd.Type = CommandType.SHARED_VARIABLE_GET;\n\n                commands.push(cmd);\n\n                \n                cmd = new CommandModel();\n                \n                \n                cmd.Variable = variableBlock.VariableName;\n                cmd.Type = variableBlock.VariableOperationType == VariableOperationType.INCREASE ? CommandType.SHARED_VARIABLE_CALC_SUM : CommandType.SHARED_VARIABLE_CALC_DIFF,\n                cmd.Value = variableBlock.Value;\n\n                commands.push(cmd);\n\n                \n                cmd = new CommandModel();\n                \n                cmd.Variable = variableBlock.VariableName;\n                cmd.Type = CommandType.SHARED_VARIABLE_SET;\n\n                commands.push(cmd);\n                break;\n        }\n\n        return commands;\n    }\n\n    public static GetText(command: CommandModel): string\n    {\n        switch (command.Type)\n        {\n            case CommandType.SEMAPHOR_ENTER:\n                return \"Enter critical region - \" + command.Variable;\n            case CommandType.SEMAPHOR_EXIT:\n            return \"Exit critical region - \" + command.Variable;\n            case CommandType.SHARED_VARIABLE_GET:\n            return \"Get value of variable - \" + command.Variable;\n            case CommandType.SHARED_VARIABLE_SET:\n            return \"Set value of variable - \" + command.Variable;\n            case CommandType.SHARED_VARIABLE_CALC_SUM:\n            return \"Increase value of \" + command.Variable + \" by \" + command.Value;\n            case CommandType.SHARED_VARIABLE_CALC_DIFF:\n            return \"Decrease value of \" + command.Variable + \" by \" + command.Value;\n            default:\n                return \"Block of commands\";\n        }\n    }\n\n    public static DeserializeLogs(jsonObj: any): BaseLogModel[]\n    {\n        let logs: BaseLogModel[] = [];\n        jsonObj.forEach(element => {\n            logs.push(this.DeserializeLog(element));\n        });\n        return logs;\n    }\n\n    private static DeserializeLog(obj: any): BaseLogModel\n    {\n        switch(obj.Type)\n        {\n            case LogType.ALL_SUSPENDED:\n            case LogType.DEADLOCK:\n                return BaseLogModel.Deserialize(obj);\n            case LogType.AWAKE_PROCESS:\n            case LogType.DISPATCHER_SKIP:\n            case LogType.MOVE:\n                return LogModel.Deserialize(obj);\n            case LogType.ENTER_REGION:\n            case LogType.EXIT_REGION:\n            case LogType.SUSPENDED:\n                return SemaphoreLogModel.Deserialize(obj);\n            case LogType.CALC_VALUE:\n            case LogType.GET_VALUE:\n            case LogType.SET_VALUE:\n                return VariableLogModel.Deserialize(obj);\n        }\n    }\n\n    public static DeserializePrograms(obj: any): ProgramModel[]\n    {\n        let tmp: ProgramModel[] = [];\n\n        obj.forEach(element => {\n            tmp.push(ProgramModel.Deserialize(element));\n        });\n\n        return tmp;\n    }\n}","﻿import { LogType } from \"../Enums/LogType\";\n\nexport class BaseLogModel\n{\n    public Type: LogType;\n\n    public static Deserialize(obj: any): BaseLogModel\n    {\n        let trueObj: BaseLogModel = new BaseLogModel();\n        trueObj.Type = obj.Type;\n\n        return trueObj;\n    }\n}","﻿import { BlockType } from \"../Enums/BlockType\";\nimport { isNullOrUndefined } from \"util\";\n\nexport class BlockModel\n{\n    public Type: BlockType  \n\n    public IsValid(): boolean\n    {\n        return true;\n    }\n\n    constructor(type?: BlockType)\n    {\n        this.Type = isNullOrUndefined(type) ? BlockType.OTHER : type;\n    }\n   \n    public Clone(): BlockModel\n    {\n        return BlockModel.Deserialize(this);\n    }\n\n    public static Deserialize(obj: any): BlockModel\n    {\n        let trueObj: BlockModel = new BlockModel();\n\n        trueObj.Type = obj.Type;\n\n        return trueObj;\n    }\n}","﻿import { CommandType } from \"../Enums/CommandType\";\n\nexport class CommandModel\n{\n    public Type: CommandType;\n    public Variable: string;\n    public Value: number;\n\n    public DisplayColor: boolean;\n\n    \n    public Clone(): CommandModel\n    {\n        return CommandModel.Deserialize(this);\n    }\n\n    public static Deserialize(obj: any): CommandModel\n    {\n        if(obj == null)\n        {\n            return null;\n        }\n\n        let trueObj: CommandModel = new CommandModel();\n\n        trueObj.DisplayColor = obj.DisplayColor;\n        trueObj.Type = obj.Type;\n        trueObj.Value = obj.Value;\n        trueObj.Variable = obj.Variable;\n\n        return trueObj;\n    }\n}","﻿import { ProcessCommandsModel } from \"./ProcessCommandsModel\";\n\nexport class ExecutableProgramModel\n{\n    public Name: string;\n    public Processes: ProcessCommandsModel[];\n    \n    public ProcessCount(): number\n    {\n        return this.Processes != null ? this.Processes.length : -1;\n    }\n    \n    public Add(commands: ProcessCommandsModel)\n    {\n        if(this.Processes==null)\n        {\n            this.Processes = [];\n        }\n\n        this.Processes.push(commands);\n    }\n\n    public static Deserialize(obj: any): ExecutableProgramModel\n    {\n        let trueObj: ExecutableProgramModel = new ExecutableProgramModel();\n\n        trueObj.Name = obj.Name;\n        \n        if(obj.Processes)\n        {\n            trueObj.Processes = [];\n\n            obj.Processes.forEach(element => {\n                trueObj.Processes.push(ProcessCommandsModel.Deserialize(element));\n            });\n        }\n\n        return trueObj;\n    }\n}","﻿import { InitialValueModel } from \"./InitialValueModel\";\n\nexport class ExecutionSettingsModel\n{\n    private dispatcher: number[] = [];\n\n    public Variables: InitialValueModel[] = [];\n    public Semaphores: InitialValueModel[] = [];\n\n    public DispatcherEnabled: boolean = false;\n\n    public get Dispatcher(): number[]\n    {\n        return this.DispatcherEnabled ? this.dispatcher : [];\n    }\n\n    public set Dispatcher(value: number[])\n    {\n        this.dispatcher = value;\n    }\n}","﻿export class InitialValueModel\n{\n    public Name: string;\n    public Value: number;\n}","﻿import { BaseLogModel } from \"./BaseLogModel\";\nimport { CommandModel } from \"./CommandModel\";\n\nexport class LogModel extends BaseLogModel\n{\n    public Process: number;\n    public Command: CommandModel;\n    \n    public ShouldDisplay(): boolean\n    {\n        return this.Command != null;\n    }\n\n    public static Deserialize(obj: any): LogModel\n    {\n        let trueObj: LogModel = new LogModel();\n        trueObj.Type = obj.Type;\n        trueObj.Process = obj.Process;\n        trueObj.Command = CommandModel.Deserialize(obj.Command);\n\n        return trueObj;\n    }\n}","﻿import { BlockModel } from \"./BlockModel\";\nimport { BlockType } from \"../Enums/BlockType\";\nimport { Helper } from \"../Helper\";\n\nexport class LoopBlockModel extends BlockModel\n{\n    public Children: BlockModel[];\n\n    public Iterations: number = 1;\n\n    public IsValid(): boolean\n    {\n        if(this.Iterations>0 && this.Children!=null && this.Children.length>0)\n            {\n                for(let i=0;i<this.Children.length; i++)\n                {\n                    if(!this.Children[i].IsValid())\n                    {\n                        return false;\n                    } \n                }\n\n                return true;\n            }\n\n        return false;\n    }\n   \n    public Clone(): LoopBlockModel\n    {\n        return LoopBlockModel.Deserialize(this);\n    }\n\n    public static Deserialize(obj: any): LoopBlockModel\n    {\n        let trueObj: LoopBlockModel = new LoopBlockModel();\n\n        trueObj.Type = obj.Type;\n        trueObj.Iterations = obj.Iterations;\n\n        if(obj.Children!=null)\n        {\n            trueObj.Children = [];\n\n            obj.Children.forEach(tmp => {\n                trueObj.Children.push(Helper.DeserializeSpecific(tmp));\n            });\n        }\n\n        return trueObj;\n    }\n\n    constructor()\n    {\n        super(BlockType.LOOP);\n    }\n\n    public Add(block: BlockModel, position: number)\n    {\n        if(this.Children == null)\n        {\n            this.Children = [];\n        }\n        \n        this.Children = this.InsertArrayAt(this.Children, position, block);\n    }\n\n    private InsertArrayAt(array: any[], index: number, arrayToInsert: any): any[] {\n        Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n        return array;\n    }\n}","﻿export class PrintedLogModel\n{\n    public Process: string;\n    public Description: string;\n    public States: string;\n}","﻿import { BlockModel } from \"./BlockModel\";\nimport { isNullOrUndefined } from \"util\";\nimport { Helper } from \"../Helper\";\n\nexport class ProcessBlocksModel\n{\n    public Name: string;\n    public Blocks: BlockModel[];\n\n    public IsValid(): boolean\n    {\n        if(!isNullOrUndefined(this.Name) && this.Blocks != null && this.Blocks.length>0)\n        {\n            for(let i=0;i<this.Blocks.length; i++)\n            {\n                if(!this.Blocks[i].IsValid())\n                {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    public Add(command: BlockModel, position: number)\n    {\n        if (this.Blocks == null)\n        {\n            this.Blocks = [];\n        }\n\n        this.Blocks = this.InsertArrayAt(this.Blocks, position, command);\n    }\n\n    public AddRange(commands: BlockModel[])\n    {\n        commands.forEach(command => this.Blocks.push(command));\n    }\n\n    private InsertArrayAt(array: any[], index: number, arrayToInsert: any): any[] {\n        Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n        return array;\n    }\n\n    \n    public Clone(): ProcessBlocksModel\n    {\n        return ProcessBlocksModel.Deserialize(JSON.parse(JSON.stringify(this)));\n    }\n\n    public static Deserialize(obj: any): ProcessBlocksModel\n    {\n        let trueObj: ProcessBlocksModel = new ProcessBlocksModel();\n        trueObj.Name = obj.Name;\n\n        if(obj.Blocks != null)\n        {\n            trueObj.Blocks = [];\n  \n            obj.Blocks.forEach(tmp => {\n                trueObj.Blocks.push(Helper.DeserializeSpecific(tmp));\n            });     \n        }\n\n        return trueObj;\n    }\n}","﻿import { CommandModel } from \"./CommandModel\";\n\nexport class ProcessCommandsModel\n{\n    public Name: string;\n    public Commands: CommandModel[];\n    \n    public CommandCount(): number\n    {\n        return this.Commands != null ? this.Commands.length : -1;\n    }\n\n    public Add(command: CommandModel)\n    {\n        if (this.Commands == null)\n        {\n            this.Commands = [];\n        }\n\n        this.Commands.push(command);\n    }\n\n    public AddRange(commands: CommandModel[])\n    {\n        commands.forEach(command => this.Commands.push(command));\n    }\n\n    public static Deserialize(obj: any): ProcessCommandsModel\n    {\n        let trueObj: ProcessCommandsModel = new ProcessCommandsModel();\n\n        trueObj.Name = obj.Name;\n        \n        if(obj.Commands)\n        {\n            trueObj.Commands = [];\n\n            obj.Commands.forEach(element => {\n                trueObj.Commands.push(CommandModel.Deserialize(element));\n            });\n        }\n\n        return trueObj;\n    }\n}","﻿export class ProcessCountModel\n{\n    public Value: number;\n\n    public Name: string;\n}","﻿import { ProcessBlocksModel } from \"./ProcessBlocksModel\";\nimport { isNullOrUndefined } from \"util\";\n\nexport class ProgramModel\n{\n    public Name: string;\n    public Processes: ProcessBlocksModel[];\n\n    public ProcessCount(): number\n    {\n        return this.Processes != null ? this.Processes.length : 0;\n    }\n\n    public IsValid(): boolean\n    {\n        if (!isNullOrUndefined(this.Name) && this.ProcessCount() > 0 \n                && this.ProcessCount() == this.Distinct(this.Select(this.Processes, x=>x.Name)).length)\n        {\n            for(let i=0;i<this.ProcessCount();i++)\n            {\n                if(!this.Processes[i].IsValid())\n                {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n    \n    public Add(commands: ProcessBlocksModel)\n    {\n        if(this.Processes==null)\n        {\n            this.Processes =  [];\n        }\n\n        this.Processes.push(commands);\n    }\n\n    public Clone(): ProgramModel\n    {\n        return ProgramModel.Deserialize(this);\n    }\n\n    public static Deserialize(obj: any): ProgramModel\n    {\n        let trueObj: ProgramModel = new ProgramModel();\n\n        trueObj.Name = obj.Name;\n\n        if(obj.Processes != null)\n        {\n            trueObj.Processes = [];\n    \n            obj.Processes.forEach(tmp => {\n                trueObj.Processes.push(ProcessBlocksModel.Deserialize(tmp));\n            });       \n        }\n\n        return trueObj;\n    }\n\n    public Select(arr: any[], func): any[]\n    {\n        let retArr = [];\n\n        for(let obj in arr)\n        {\n            retArr.push(func(obj));\n        }\n\n        return retArr;\n    }\n\n    public Distinct(arr: any[]): any[]\n    {\n        let retArr = [];\n\n        for(let obj in arr)\n        {\n            if(retArr.indexOf(obj) == -1)\n            {\n                retArr.push(obj);\n            }\n        }\n\n        return retArr;\n    }\n}","﻿import { BlockModel } from \"./BlockModel\";\nimport { SemaphorOperationType } from \"../Enums/SemaphorOperationType\";\nimport { isNullOrUndefined } from \"util\";\nimport { BlockType } from \"../Enums/BlockType\";\n\nexport class SemaphorBlockModel extends BlockModel\n{\n    public SemaphorName: string;\n    public SemaphorOperation: SemaphorOperationType = SemaphorOperationType.ENTER;\n\n    public IsValid(): boolean\n    {\n        return !isNullOrUndefined(this.SemaphorName);\n    }\n   \n    public Clone(): SemaphorBlockModel\n    {\n        return SemaphorBlockModel.Deserialize(this);\n    }\n\n    public static Deserialize(obj: any): SemaphorBlockModel\n    {\n        let trueObj: SemaphorBlockModel = new SemaphorBlockModel();\n\n        trueObj.Type = obj.Type;\n        trueObj.SemaphorName = obj.SemaphorName;\n        trueObj.SemaphorOperation = obj.SemaphorOperation;\n\n        return trueObj;\n    }\n\t\n    constructor()\n    {\n        super(BlockType.SEMAPHOR);\n    }\n}","﻿import { LogModel } from \"./LogModel\";\nimport { CommandModel } from \"./CommandModel\";\n\nexport class SemaphoreLogModel extends LogModel\n{\n    public Semaphore: string; \n\n    public static Deserialize(obj: any): SemaphoreLogModel\n    {\n        let trueObj: SemaphoreLogModel = new SemaphoreLogModel();\n        trueObj.Type = obj.Type;\n        trueObj.Process = obj.Process;\n        trueObj.Command = CommandModel.Deserialize(obj.Command);\n        trueObj.Semaphore = obj.Semaphore;\n\n        return trueObj;\n    }\n}","﻿import { BlockType } from \"../Enums/BlockType\";\nimport { VariableOperationType } from \"../Enums/VariableOperationType\";\nimport { isNullOrUndefined } from \"util\";\nimport { BlockModel } from \"./BlockModel\";\n\nexport class VariableBlockModel extends BlockModel\n{\n    public VariableOperationType: VariableOperationType = VariableOperationType.GET;\n\n    public VariableName: string;\n    \n    public Value: number;\n\n    public IsValid(): boolean\n    {\n        return !isNullOrUndefined(this.VariableName) && (this.VariableOperationType == VariableOperationType.GET || !isNullOrUndefined(this.Value));\n    }\n   \n    public Clone(): VariableBlockModel\n    {\n        return VariableBlockModel.Deserialize(this);\n    }\n\n    public static Deserialize(obj: any): VariableBlockModel\n    {\n        let trueObj: VariableBlockModel = new VariableBlockModel();\n\n        trueObj.Type = obj.Type;\n        trueObj.Value = obj.Value;\n        trueObj.VariableName = obj.VariableName;\n        trueObj.VariableOperationType = obj.VariableOperationType;\n\n        return trueObj;\n    }\n\n    constructor()\n    {\n        super(BlockType.SHARED_VARIABLE);\n    }\n}","﻿import { LogModel } from \"./LogModel\";\nimport { CommandModel } from \"./CommandModel\";\n\nexport class VariableLogModel extends LogModel\n{\n    public Variable: string;\n    public Value: number;\n\n    public static Deserialize(obj: any): VariableLogModel\n    {\n        let trueObj: VariableLogModel = new VariableLogModel();\n        trueObj.Type = obj.Type;\n        trueObj.Process = obj.Process;\n        trueObj.Command = CommandModel.Deserialize(obj.Command);\n        trueObj.Value = obj.Value;\n        trueObj.Variable = obj.Variable;\n\n        return trueObj;\n    }\n}","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n\n})\nexport class ApiRequestService {\n\n  private get URL(): string\n  {\n    return window.location.protocol + \"//\" + window.location.host;\n  }\n\n  constructor(private http:HttpClient, private spinner: NgxSpinnerService) {\n  }\n \n    simulate(execProgram: any) {\n        return this.http.post(this.URL + \"/Execute\", execProgram, { withCredentials: true })\n          .pipe(catchError(this.handleError.bind(this)));\n    }\n    \n    private handleError(error: HttpErrorResponse) {\n      alert(error.message);\n      \n      this.spinner.hide();\n\n      return throwError(error);\n    }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, TemplateRef, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ThreadingSimulator';\n\n  constructor()\n  {\n    localStorage.clear();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatTableModule } from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { RefreshButtonComponent } from './refresh-button/refresh-button.component';\nimport { BlockComponent } from './block/block.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\nimport { MatDialogModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PreviewDialogComponent } from './preview-dialog/preview-dialog.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SimulationComponent } from './simulation/simulation.component';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { NgxSmoothDnDModule } from 'ngx-smooth-dnd';\nimport { ContextMenuModule } from 'ngx-contextmenu';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DefaultComponent } from './default/default.component';\nimport { ExecutionSettingsComponent } from './execution-settings/execution-settings.component';\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\nimport { NgxLocalStorageModule } from 'ngx-localstorage';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nlet routes: Routes = [\n  { path: \"\", component: AppComponent, children: [\n    { path: \"\", component: DefaultComponent },\n    { path: \"settings\",  component: ExecutionSettingsComponent },\n    { path: \"simulation\",  component: SimulationComponent }\n  ]}\n];\n\nlet config: ExtraOptions = {\n  onSameUrlNavigation: \"reload\"\n};\n\n@NgModule({\n  entryComponents: [\n    PreviewDialogComponent\n  ],\n  declarations: [\n    AppComponent,\n    RefreshButtonComponent,\n    BlockComponent,\n    PreviewDialogComponent,\n    PreviewComponent,\n    SettingsComponent,\n    SimulationComponent,\n    DefaultComponent,\n    ExecutionSettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatIconModule,\n    FormsModule,\n    NgxDnDModule,   \n    MatDialogModule,\n    MatButtonModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    MatStepperModule,\n    MatExpansionModule,\n    NgxSmoothDnDModule,\n    ContextMenuModule.forRoot(),\n    HttpClientModule,\n    RouterModule.forRoot(routes, config),\n    NgxLocalStorageModule.forRoot(),\n    MatTableModule,\n    NgxSpinnerModule\n  ],\n  providers: [ ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".block\\n{\\n    border-top-right-radius: 10px;\\n    border-bottom-right-radius: 10px;\\n    padding: 10px;\\n    padding-top: 20px;\\n}\\n\\n.first\\n{\\n    border-top-left-radius: 10px;\\n}\\n\\n.last\\n{\\n    border-bottom-left-radius: 10px;\\n}\\n\\n#loopContainer\\n{\\n    background-color: white;\\n    margin-left: 10px;\\n    border-radius: 10px;\\n    padding: 2px;\\n    position: relative;\\n    left: 15px; \\n}\\n\\n.disabled\\n{\\n    opacity: 0.2;\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n\\n.loop\\n{\\n    padding-bottom: 20px;\\n}\\n\\n.varSmaller\\n{\\n    width: 270px;\\n}\\n\\n.varBigger\\n{\\n    width: 350px;\\n}\\n\\n.loop, .loopAfter\\n{\\n    background-color: #8E44AD;\\n}\\n\\n.semaphore, .semaphore::after\\n{\\n    background-color: #C0392B; \\n}\\n\\n.variable, .variable::after\\n{\\n    background-color: #2980B9\\n}\\n\\n.other, .other::after\\n{\\n    background-color: #27AE60; \\n}\\n\\n.block:not(.loop)::after\\n{\\n    width: 20px;\\n    height: 20px;\\n    border-radius: 10px;\\n    content: '__';\\n    float: left;\\n    position: relative;\\n    top: 25px;\\n    color: rgba(0, 0, 0, 0);\\n}\\n\\n.loopAfter\\n{\\n    width: 20px;\\n    height: 20px;\\n    border-radius: 10px;\\n    content: '__';\\n    color: rgba(0, 0, 0, 0);\\n    left: 11px;\\n    position: absolute;\\n    margin-top: -5px;\\n}\\n\\n.variable::after \\n{\\n    top: 27px;\\n}\\n\\n.semaphore::after \\n{\\n    top: 26px;\\n}\\n\\nblock\\n{\\n    display: table;\\n    widows: 0;\\n}\\n\\n@-moz-document url-prefix() {\\n    .semaphore::after\\n    {\\n        margin-top:3px;\\n        margin-left:-20px;\\n    }\\n\\n    .semaphore.edit::after\\n    {\\n        margin-top:3px !important;\\n    }\\n\\n    .variable::after\\n    {\\n        margin-top:3px;\\n    }\\n\\n    .varBigger::after\\n    {\\n        margin-top:3px;\\n    }\\n\\n    .varBigger.edit\\n    {\\n        padding-left: 30px !important;\\n    }\\n    \\n    .semaphore\\n    {\\n        padding-left: 30px !important;\\n    }\\n\\n    .varBigger.edit::after\\n    {\\n        margin-top: 3px !important;\\n        margin-left: -20px !important;\\n    }\\n}\"","module.exports = \"<div *ngIf=\\\"Block.Type==0\\\" [ngClass]=\\\"{'first': Index==0, 'last': Index==Length-1, 'edit': EditMode}\\\" class=\\\"block semaphore\\\" style=\\\"width: 260px\\\">\\n  Semaphore:\\n  <input [ngClass]=\\\"{'disabled':!EditMode}\\\"  type=\\\"text\\\" [(ngModel)]=\\\"Block.SemaphorName\\\" style=\\\"width:50px; margin-left: 10px\\\">\\n\\n  <select [ngClass]=\\\"{'disabled':!EditMode}\\\" [(ngModel)]=\\\"Block.SemaphorOperation\\\" style=\\\"width:60px; margin-left: 10px\\\">\\n    <option *ngFor=\\\"let op of SemaphoreOperations\\\" [ngValue]=\\\"op.Val\\\">{{op.Name}}</option>\\n  </select>\\n\\n  <refresh-button (click)=\\\"deleteThis()\\\" style=\\\"float: right; position: relative; top: -3px\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'delete'\\\"></refresh-button>\\n</div>\\n<div *ngIf=\\\"Block.Type==1\\\" [ngClass]=\\\"{'first': Index==0, 'last': Index==Length-1, 'varSmaller': Block.VariableOperationType==0, 'varBigger': Block.VariableOperationType!=0,'edit': EditMode}\\\" class=\\\"block variable\\\">\\n  Variable: \\n  <input [ngClass]=\\\"{'disabled':!EditMode}\\\" type=\\\"text\\\" [(ngModel)]=\\\"Block.VariableName\\\" style=\\\"width:50px; margin-left: 10px\\\">\\n  \\n  <select [ngClass]=\\\"{'disabled':!EditMode}\\\" [(ngModel)]=\\\"Block.VariableOperationType\\\" style=\\\"width:85px; margin-left: 10px\\\">\\n    <option *ngFor=\\\"let op of variableOperations\\\" [ngValue]=\\\"op.Val\\\">{{op.Name}}</option>\\n  </select>\\n\\n  <span *ngIf=\\\"Block.VariableOperationType==1\\\" style=\\\"margin-left:5px;\\\">by</span>\\n  <span *ngIf=\\\"Block.VariableOperationType==2||Block.VariableOperationType==3\\\" style=\\\"margin-left:5px;\\\">to</span>\\n\\n  <input *ngIf=\\\"Block.VariableOperationType!=0\\\" [ngClass]=\\\"{'disabled':!EditMode}\\\" type=\\\"number\\\" [(ngModel)]=\\\"Block.Value\\\" style=\\\"margin-left:10px; width: 50px\\\">\\n  \\n  <refresh-button (click)=\\\"deleteThis()\\\" style=\\\"float: right; position: relative; top: -3px\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'delete'\\\"></refresh-button>\\n</div>\\n<div *ngIf=\\\"Block.Type==2\\\" [ngClass]=\\\"{'first': Index==0, 'last': Index==Length-1,'edit': EditMode}\\\" class=\\\"block other\\\" style=\\\"width: 180px;\\\">\\n  Block of commands\\n  <refresh-button (click)=\\\"deleteThis()\\\" style=\\\"float: right; position: relative; top: -3px\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'delete'\\\"></refresh-button>\\n</div>\\n<div *ngIf=\\\"Block.Type==3\\\" [ngClass]=\\\"{'first': Index==0, 'last': Index==Length-1,'edit': EditMode}\\\" class=\\\"block loop\\\" style=\\\"min-width: 210px; display: flow-root\\\">\\n  <span style=\\\"margin-left: 20px\\\">Iterations:</span>\\n  <input [ngClass]=\\\"{'disabled':!EditMode}\\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"Block.Iterations\\\" style=\\\"margin-left:10px; width: 50px\\\">\\n\\n  <refresh-button (click)=\\\"deleteThis()\\\" style=\\\"float: right; position: relative; top: -3px\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'delete'\\\"></refresh-button>\\n  <br><br>\\n  <div id=\\\"loopContainer\\\" *ngIf=\\\"!EditMode\\\">\\n    <block *ngFor=\\\"let block of Block.Children; let ind = index\\\" [array]=\\\"Block.Children\\\" (arrayChange)=\\\"Block.Children=$event\\\" [edit]=\\\"EditMode\\\" [val]=\\\"block\\\" [index]=\\\"ind\\\" [length]=\\\"Block.Children.length\\\"></block>\\n  </div>\\n  <div (drop)=\\\"dropped($event)\\\" *ngIf=\\\"EditMode\\\" id=\\\"loopContainer\\\" ngxDroppable class=\\\"dropTarget\\\" style=\\\"min-height: 30px\\\" [model]=\\\"Block.Children\\\" dropZone=\\\"blocks\\\">\\n    <block ngxDraggable [model]=\\\"block\\\" *ngFor=\\\"let block of Block.Children; let ind = index\\\" [array]=\\\"Block.Children\\\" (arrayChange)=\\\"Block.Children=$event\\\" [edit]=\\\"EditMode\\\" [val]=\\\"block\\\" [index]=\\\"ind\\\" [length]=\\\"Block.Children.length\\\"></block>\\n  </div>\\n</div>\\n<div *ngIf=\\\"Block.Type==3\\\" class=\\\"loopAfter\\\"></div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BlockModel } from '../Models/BlockModel';\nimport { SemaphorOperationType } from '../Enums/SemaphorOperationType';\nimport { VariableOperationType } from '../Enums/VariableOperationType';\nimport { Helper } from '../Helper';\n\n@Component({\n  selector: 'block',\n  templateUrl: './block.component.html',\n  styleUrls: ['./block.component.css']\n})\nexport class BlockComponent implements OnInit {\n\n  @Input(\"val\") Block: any;\n  @Input(\"index\") Index: number;\n  @Input(\"length\") Length: number;\n  @Input(\"array\") Array: any[];\n  @Input(\"edit\") EditMode: boolean;\n  @Output(\"arrayChange\") arrayChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  public SemaphoreOperations: any[] = [\n    {\n      Val: SemaphorOperationType.ENTER,\n      Name: \"Enter\"\n    },\n    {\n      Val: SemaphorOperationType.EXIT,\n      Name: \"Exit\"\n    }\n  ];\n\n  public variableOperations: any[] = [\n    {\n      Val: VariableOperationType.GET,\n      Name: \"Get\"\n    },\n    {\n      Val: VariableOperationType.SET,\n      Name: \"Set\"\n    },\n    {\n      Val: VariableOperationType.INCREASE,\n      Name: \"Increase\"\n    },\n    {\n      Val: VariableOperationType.DECREASE,\n      Name: \"Decrease\"\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public dropped(event: any)\n  {\n    if(!this.Block.Children)\n    {\n      this.Block.Children = [Helper.DeserializeSpecific(event.value)];\n    }\n    else\n    {\n      let ind: number = this.Block.Children.indexOf(event.value);\n      this.Block.Children[ind] = Helper.DeserializeSpecific(event.value);\n    }\n  }\n\n  public deleteThis()\n  {\n    let arr: BlockModel[] = [];\n\n    for(let i=0;i<this.Array.length;i++)\n    {\n      if(this.Array[i] != this.Block)\n      {\n        arr.push(this.Array[i]);\n      }\n    }\n\n    this.arrayChange.emit(arr);\n  }\n\n}\n","module.exports = \".active\\n{\\n    font-weight: bold;\\n}\\n\\n#grouplist\\n{\\n    height: 80vh;\\n    width: 15%;\\n    border: 1px solid gray;\\n    padding: 10px 5px;\\n    list-style-type: none;\\n    overflow-y: auto;\\n    float:left;\\n}\\n\\n#content\\n{\\n    width:82%; \\n    float: left;\\n    margin-top:5px;\\n    padding:10px;\\n    height: 77vh;\\n    overflow: auto;\\n}\\n\\n#contanerDragFrom\\n{\\n    width:80%; \\n    float: left;\\n}\\n\\n#grouplist li\\n{\\n    margin: 10px 0;\\n    cursor: pointer;\\n}\\n\\n#grouplist li span\\n{\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    max-width: 80%;\\n    display: inline-block;\\n}\\n\\n.disabled\\n{\\n    opacity: 0.2;\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n\\n.inputText\\n{\\n    width:130px;\\n}\\n\\n.block0\\n{\\n    background-color: #C0392B; \\n}\\n\\n.block1\\n{\\n    background-color: #2980B9\\n}\\n\\n.block2\\n{\\n    background-color: #27AE60; \\n}\\n\\n.block3\\n{\\n    background-color: #8E44AD;\\n}\\n\\nblock\\n{\\n    display: table;\\n    widows: 0;\\n}\\n\\n.blockTypeParent block\\n{\\n    visibility: collapse;\\n}\\n\"","module.exports = \"<span>Predefined examples:</span> \\n<refresh-button (click)=\\\"addNew()\\\" style=\\\"position:relative; top:7px; margin-left:20px\\\" [isEnabled]=\\\"isNotEditMode.bind(this)\\\" [img]=\\\"'add_circle'\\\"></refresh-button>\\n<refresh-button (click)=\\\"edit()\\\" style=\\\"position:relative; top:7px; margin-left:10px\\\" [isEnabled]=\\\"isEditEnabled.bind(this)\\\" [img]=\\\"'border_color'\\\"></refresh-button>\\n\\n<refresh-button (click)=\\\"cancel()\\\" style=\\\"position:relative; top:7px; float: right; margin-left:10px\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'cancel'\\\"></refresh-button>\\n<refresh-button (click)=\\\"save()\\\" style=\\\"position:relative; top:7px; float: right; margin-left:10px\\\" [isEnabled]=\\\"isValid.bind(this)\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'save'\\\"></refresh-button>\\n<refresh-button (click)=\\\"preview(content)\\\" [isEnabled]=\\\"isValid.bind(this)\\\"s style=\\\"position:relative; top:7px; float: right; margin-left:10px\\\" *ngIf=\\\"SelectedProgram\\\" [text]=\\\"'Preview processes'\\\" [img]=\\\"'remove_red_eye'\\\"></refresh-button>\\n<refresh-button (click)=\\\"run()\\\" style=\\\"position:relative; top:7px; float: right\\\" *ngIf=\\\"SelectedProgram && !EditMode\\\" [text]=\\\"'Run'\\\" [img]=\\\"'play_circle_filled'\\\"></refresh-button>\\n<br style=\\\"clear: both\\\">\\n<ul id=\\\"grouplist\\\" style=\\\"margin-top:15px\\\" [ngClass]=\\\"{'disabled': EditMode}\\\">\\n  <li [ngClass]=\\\"{'active': SelectedProgram == program}\\\" (click)=\\\"listClick($event, program)\\\" *ngFor=\\\"let program of Programs\\\">\\n    <span>{{program.Name}}</span> <refresh-button style=\\\"float:right; margin-top:-5px;\\\" (click)=\\\"delete(program)\\\" [img]=\\\"'delete'\\\"></refresh-button>\\n  </li>\\n</ul>\\n\\n<div id=\\\"content\\\" #toScroll>\\n  <div *ngIf=\\\"SelectedProgram\\\" style=\\\"padding-top:20px\\\">\\n    <span style=\\\"position: relative; top:-20px\\\">\\n      <span>Name: </span><span *ngIf=\\\"!EditMode\\\" class=\\\"inputText\\\">{{SelectedProgram.Name}}</span><input class=\\\"inputText\\\" style=\\\"z-index: 1000\\\" *ngIf=\\\"EditMode\\\" [(ngModel)]=\\\"SelectedProgram.Name\\\" type=\\\"text\\\">\\n    </span>\\n    <br><br>\\n    <div style=\\\"margin-top:20px\\\">\\n      <div *ngFor=\\\"let process of SelectedProgram.Processes\\\" [ngStyle]=\\\"{'top': !EditMode ? '5px' : '-60px'}\\\" style=\\\"position: relative; display: table-cell; min-width:300px; height: 60vh;\\\">\\n        <span>Process name: </span><span *ngIf=\\\"!EditMode\\\" class=\\\"inputText\\\">{{process.Name}}</span><input class=\\\"inputText\\\" *ngIf=\\\"EditMode\\\" [(ngModel)]=\\\"process.Name\\\" type=\\\"text\\\">\\n        <refresh-button (click)=\\\"deleteProcess(process)\\\" style=\\\"float: right; position:relative; top:-2px\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'delete'\\\"></refresh-button>\\n        <br><br>\\n        <div (drop)=\\\"dropped($event, process)\\\" *ngIf=\\\"EditMode\\\" ngxDroppable class=\\\"dropTarget\\\" [model]=\\\"process.Blocks\\\" dropZone=\\\"blocks\\\" style=\\\"min-height: 300px\\\">\\n            <block ngxDraggable [model]=\\\"block\\\" *ngFor=\\\"let block of process.Blocks; let ind = index\\\" [array]=\\\"process.Blocks\\\" (arrayChange)=\\\"process.Blocks=$event\\\" [edit]=\\\"EditMode\\\" [val]=\\\"block\\\" [index]=\\\"ind\\\" [length]=\\\"process.Blocks.length\\\"></block>\\n          </div>\\n          <div *ngIf=\\\"!EditMode\\\">\\n            <block *ngFor=\\\"let block of process.Blocks; let ind = index\\\" [array]=\\\"process.Blocks\\\" (arrayChange)=\\\"process.Blocks=$event\\\" [edit]=\\\"EditMode\\\" [val]=\\\"block\\\" [index]=\\\"ind\\\" [length]=\\\"process.Blocks.length\\\"></block>\\n          </div>\\n      </div>\\n      <refresh-button (click)=\\\"addNewProcess()\\\" style=\\\"display: table-cell; width: 10vw; height: 10vw; position: relative; top:150px\\\" [size]=\\\"'80'\\\" *ngIf=\\\"EditMode\\\" [img]=\\\"'add_circle'\\\"></refresh-button>\\n    </div>\\n  </div>\\n</div>\\n<div id=\\\"contanerDragFrom\\\" *ngIf=\\\"EditMode\\\" [model]=\\\"BlockInstances\\\" ngxDroppable [copy]=\\\"true\\\" style=\\\"margin-top:10px\\\"> \\n  <div *ngFor=\\\"let block of BlockInstances\\\" class=\\\"blockTypeParent\\\" style=\\\"display: inline-block; width: 15%; margin:0 4%\\\" ngxDraggable [model]=\\\"block\\\" [dropZones]=\\\"['blocks']\\\">\\n    <block [val]=\\\"block\\\" index=\\\"0\\\" length=\\\"1\\\"></block>\\n    <div [class]=\\\"'block'+block.Type+' blockType'\\\" style=\\\"padding: 10px 15px; border-radius: 10px; width:100%; float: left; text-align: center; margin: 0 2.5%\\\">\\n        <span *ngIf=\\\"block.Type==0\\\">Semaphore</span>\\n        <span *ngIf=\\\"block.Type==1\\\">Shared variable</span>\\n        <span *ngIf=\\\"block.Type==2\\\">Block of commands</span>\\n        <span *ngIf=\\\"block.Type==3\\\">Loop</span>\\n    </div>\\n  </div>\\n</div>\\n\\n<div style=\\\"clear:both; position: relative; top:-20px\\\">\\n  <refresh-button (click)=\\\"Import()\\\" text=\\\"Import\\\" style=\\\"position:relative; top:7px;\\\" [isEnabled]=\\\"isNotEditMode.bind(this)\\\" [img]=\\\"'cloud_upload'\\\"></refresh-button>\\n  <refresh-button (click)=\\\"Export()\\\" text=\\\"Export examples\\\" style=\\\"position:relative; top:7px; margin-left:20px\\\" [isEnabled]=\\\"isNotEditMode.bind(this)\\\" [img]=\\\"'cloud_download'\\\"></refresh-button>\\n</div>\\n\\n<br style=\\\"clear: both;\\\">\\n<span style=\\\"position: relative; top:-20px\\\" *ngIf=\\\"EditMode\\\">Current mode: Edit</span>\\n<span style=\\\"position: relative; top:-20px\\\" *ngIf=\\\"!EditMode\\\">Current mode: Normal</span>\\n\\n<input #fileDialog type=\\\"file\\\" accept=\\\".json\\\" (change)=\\\"readFromFile()\\\" hidden/>\\n\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { ProgramModel } from '../Models/ProgramModel';\nimport { BlockModel } from '../Models/BlockModel';\nimport { SemaphorBlockModel } from '../Models/SemaphorBlockModel';\nimport { VariableBlockModel } from '../Models/VariableBlockModel';\nimport { LoopBlockModel } from '../Models/LoopBlockModel';\nimport { MatDialog } from '@angular/material';\nimport { ProcessBlocksModel } from '../Models/ProcessBlocksModel';\nimport { SemaphorOperationType } from '../Enums/SemaphorOperationType';\nimport { VariableOperationType } from '../Enums/VariableOperationType';\nimport { Helper } from '../Helper';\nimport { ExecutableProgramModel } from '../Models/ExecutableProgramModel';\nimport { PreviewDialogComponent } from '../preview-dialog/preview-dialog.component';\nimport * as autoScroll from 'dom-autoscroller';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-localstorage';\n\n@Component({\n  selector: 'default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.css']\n})\nexport class DefaultComponent implements AfterViewInit {\n\n  public Programs: ProgramModel[] = [];\n  public SelectedProgram: ProgramModel;\n  public EditMode: boolean = false;\n  public AddMode: boolean = false;\n\n  @ViewChild(\"toScroll\") toScroll: ElementRef;\n  @ViewChild(\"fileDialog\") File: ElementRef;\n\n  public BlockInstances: BlockModel[] = [\n    new SemaphorBlockModel(),\n    new VariableBlockModel(),\n    new BlockModel(),\n    new LoopBlockModel()\n  ]\n  \n  private backup: ProgramModel;\n\n  constructor(public dialog: MatDialog, private localStorage: LocalStorageService, private router: Router)\n  {\n    let json: string = this.localStorage.get(\"PREVIOUS_PROGRAMS\");\n\n    if(json)\n    {\n      this.Programs = Helper.DeserializePrograms(JSON.parse(json));\n    }\n  }\n\n  ngAfterViewInit() {\n    autoScroll([\n      this.toScroll.nativeElement\n    ], {\n      margin: 50,\n      maxSpeed: 20,\n      autoScroll: function() {\n        return this.down;\n      }\n    });\n  }\n\n  public listClick(event: any, newValue: ProgramModel) \n  {\n    this.SelectedProgram = newValue;\n  }\n\n  public isNotEditMode(): boolean\n  {\n    return !this.EditMode;\n  }\n\n  public isEditEnabled(): boolean\n  {\n    return !this.EditMode && this.SelectedProgram != null;\n  }\n\n  public isEditMode(): boolean\n  {\n    return this.EditMode;\n  }\n\n  public dropped(event: any, process: ProcessBlocksModel)\n  {\n    if(!process.Blocks)\n    {\n      process.Blocks = [Helper.DeserializeSpecific(event.value)];\n    }\n    else\n    {\n      let ind: number = process.Blocks.indexOf(event.value);\n      process.Blocks[ind] = Helper.DeserializeSpecific(event.value);\n    }\n  }\n\n  public delete(program: ProgramModel)\n  {\n    this.removeAt(this.Programs, this.Programs.indexOf(program));\n  }\n\n  public deleteProcess(process: ProcessBlocksModel,)\n  {\n    this.removeAt(this.SelectedProgram.Processes, this.SelectedProgram.Processes.indexOf(process));\n  }\n\n  public removeAt(array: any[], index: number): void\n  {\n    array.splice(index, 1);\n  }\n\n  public edit()\n  {\n    this.EditMode = true;\n    this.backup = this.SelectedProgram;\n    this.SelectedProgram = this.backup.Clone();\n  }\n\n  public addNew()\n  {\n    this.EditMode = true;\n    this.AddMode = true;\n    this.SelectedProgram = new ProgramModel();\n  }\n\n  public cancel()\n  {\n    if(this.AddMode)\n    {\n      this.SelectedProgram = null;\n    }\n    else\n    {\n      this.SelectedProgram = this.backup;\n    }\n\n    this.EditMode = false;\n    this.AddMode = false;\n  }\n\n  public save()\n  {\n    if(this.AddMode)\n    {\n      this.Programs.push(this.SelectedProgram);\n    }\n    else\n    {\n      let ind: number = this.Programs.indexOf(this.backup);\n      this.Programs[ind] = this.SelectedProgram;\n    }\n    \n    this.EditMode = false;\n    this.AddMode = false;\n  }\n\n  public isValid(): boolean\n  {\n    return this.SelectedProgram.IsValid();\n  }\n\n  public addNewProcess()\n  {\n    if(this.SelectedProgram.Processes == null)\n    {\n      this.SelectedProgram.Processes = [];\n    }\n\n    this.SelectedProgram.Processes.push(new ProcessBlocksModel());\n  }\n\n  public preview()\n  {\n    let executableProgram: ExecutableProgramModel = Helper.Convert(this.SelectedProgram);\n\n    this.dialog.open(PreviewDialogComponent, {\n      width: (Math.min(executableProgram.ProcessCount() * 250, 1000) + 50) + 'px',\n      data: executableProgram\n    });\n  }\n\n  public run()\n  {\n    this.localStorage.set(\"SETTINGS\", JSON.stringify(this.SelectedProgram));\n    this.localStorage.set(\"PREVIOUS_PROGRAMS\", JSON.stringify(this.Programs));\n    this.router.navigate(['/settings']);\n  }\n\n  public Import()\n  {\n    this.File.nativeElement.click();  \n  }\n\n  public readFromFile()\n  {\n    if(this.File.nativeElement.files && this.File.nativeElement.files[0])\n    {    \n      let reader: FileReader = new FileReader();\n      reader.onload = () => {\n        this.File.nativeElement.value = \"\";\n\n        let text: string = reader.result.toString();\n        this.Programs = Helper.DeserializePrograms(JSON.parse(text));\n        this.SelectedProgram = null;\n      };\n\n      reader.readAsText(this.File.nativeElement.files[0]);\n    }\n  }\n\n  private download(filename: string, text: string) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  }\n\n  public Export()\n  {\n    let current: Date = new Date(Date.now());\n\n    let date: string = current.getFullYear()+\"-\"+current.getDate()+\"-\"+current.getMonth()+\"-\"+current.getHours()+\"-\"+current.getMonth()+\"-\"+current.getSeconds();\n    let name: string = \"programs\" + date + \".json\";\n\n    this.download(name, JSON.stringify(this.Programs));\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-expansion-panel>\\n  <mat-expansion-panel-header (click)=\\\"toggle()\\\">\\n    <mat-panel-title>\\n      <mat-icon style=\\\"position: relative; top:-3px; margin-right: 10px;\\\">{{Icon  ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</mat-icon>\\n      Preview\\n    </mat-panel-title>\\n  </mat-expansion-panel-header>\\n  <div style=\\\"display: flex;justify-content: center;align-items: center;\\\">\\n    <div style=\\\"height:200px; margin:auto; display: inline-block;\\\">\\n      <preview [processes]=\\\"ExecutableProgram.Processes\\\"></preview>\\n    </div>\\n  </div>\\n</mat-expansion-panel>\\n\\n<settings #settings [program]=\\\"Program\\\" [settings]=\\\"Settings\\\"></settings>\\n\\n<br style=\\\"clear: both\\\">\\n<refresh-button (click)=\\\"run()\\\" style=\\\"position:relative; top:50px; width: 100px; margin-left: calc(50% - 75px)\\\" [text]=\\\"'Simulate'\\\" [img]=\\\"'play_circle_filled'\\\"></refresh-button>\\n\\n<ngx-spinner\\nbdColor = \\\"rgba(51, 51, 51, 0.8)\\\"\\nsize = \\\"large\\\"\\ncolor = \\\"#fff\\\"\\ntype = \\\"timer\\\"\\n></ngx-spinner>\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { ExecutionSettingsModel } from '../Models/ExecutionSettingsModel';\nimport { ExecutableProgramModel } from '../Models/ExecutableProgramModel';\nimport { BaseLogModel } from '../Models/BaseLogModel';\nimport { SettingsComponent } from '../settings/settings.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PreviewDialogComponent } from '../preview-dialog/preview-dialog.component';\nimport { ProgramModel } from '../Models/ProgramModel';\nimport { Helper } from '../Helper';\nimport { ProcessCommandsModel } from '../Models/ProcessCommandsModel';\nimport { ApiRequestService } from '../api-request.service';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-execution-settings',\n  templateUrl: './execution-settings.component.html',\n  styleUrls: ['./execution-settings.component.css']\n})\nexport class ExecutionSettingsComponent {\n\n  public Icon: boolean = true;\n  public Settings: ExecutionSettingsModel = new ExecutionSettingsModel();\n  public ExecutableProgram: ExecutableProgramModel;\n  public SimulationExecProgram: ExecutableProgramModel;\n  public Logs: BaseLogModel[];\n  public Program: ProgramModel;\n\n  @ViewChild(\"settings\") SettingsRef: SettingsComponent;\n\n  constructor(private apiService: ApiRequestService, private localStorage: LocalStorageService, private router: Router, private spinner: NgxSpinnerService) { \n    \n    let data: string = localStorage.get(\"SETTINGS\");\n\n    if(data)\n    {\n      this.Program = ProgramModel.Deserialize(JSON.parse(data));\n      this.ExecutableProgram = Helper.Convert(this.Program);\n\n      data = localStorage.get(\"SETTINGS_DATA\");\n      localStorage.remove(\"SETTINGS_DATA\");\n\n      if(data)\n      {\n        this.Settings = JSON.parse(data);;\n      }\n    }\n    else\n    {\n      this.router.navigate(['/']);\n    }\n  } \n  \n  toggle()\n  {\n    this.Icon = !this.Icon;\n  }\n\n  private DuplicateProcesses(): ExecutableProgramModel\n  {\n      let program: ExecutableProgramModel = new ExecutableProgramModel();\n      program.Name = this.ExecutableProgram.Name;\n\n      this.SettingsRef.Processes.forEach(pcm=>{\n        let cmdModel: ProcessCommandsModel = this.ExecutableProgram.Processes.find(x => x.Name == pcm.Name);\n\n        for(let i=0; i<pcm.Value; i++)\n        {\n            let commands: ProcessCommandsModel = this.Duplicate(cmdModel);\n\n            if (pcm.Value>1)\n            {\n              commands.Name += \" - \" + i;\n            }\n\n            program.Add(commands);\n        }\n      });\n\n      return program;\n  } \n\n  private Duplicate(commands: ProcessCommandsModel): ProcessCommandsModel\n  {\n      let pcm: ProcessCommandsModel = new ProcessCommandsModel()\n      pcm.Name = commands.Name;\n\n      commands.Commands.forEach(command=>{\n        pcm.Add(command.Clone());\n      });\n\n      return pcm;\n  }\n\n  public run()\n  {\n    this.spinner.show();\n    this.SimulationExecProgram = this.DuplicateProcesses();\n    \n    if(this.Settings)\n    {\n      this.localStorage.set(\"SETTINGS_DATA_FOR_REGENERATE\", JSON.stringify(this.Settings));\n    }\n\n    this.apiService.simulate({ Program: this.SimulationExecProgram, Settings: this.Settings}).subscribe(data => {\n      this.Logs = Helper.DeserializeLogs(data);\n  \n      this.localStorage.set(\"SIMULATION\", JSON.stringify({\n        Program: this.SimulationExecProgram,\n        Logs: this.Logs,\n        Variables: this.Settings.Variables,\n        Semaphores: this.Settings.Semaphores\n      }));\n\n      this.localStorage.set(\"SETTINGS_DATA\", JSON.stringify(this.Settings));\n      this.spinner.hide();\n      \n      this.router.navigate([\"/simulation\"]);\n    }); \n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2 mat-dialog-title>Preview</h2>\\n  <hr>\\n  <mat-dialog-content>\\n    <div style=\\\"max-height: 700px\\\">\\n      <preview [processes]=\\\"ExecutableProgram.Processes\\\"></preview>\\n    </div>\\n  </mat-dialog-content>\\n  <hr>\\n  <mat-dialog-actions>\\n    <button style=\\\"float: right;\\\" mat-raised-button (click)=\\\"onCloseCancel()\\\">Close</button>\\n  </mat-dialog-actions>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material'\nimport { ExecutableProgramModel } from '../Models/ExecutableProgramModel';\n\n@Component({\n  selector: 'app-preview-dialog',\n  templateUrl: './preview-dialog.component.html',\n  styleUrls: ['./preview-dialog.component.css']\n})\nexport class PreviewDialogComponent {\n\n  constructor(public thisDialogRef: MatDialogRef<PreviewDialogComponent>, @Inject(MAT_DIALOG_DATA) public ExecutableProgram: ExecutableProgramModel) { }\n\n  onCloseCancel() {\n    this.thisDialogRef.close('Cancel');\n  }\n}\n","module.exports = \".command\\n{\\n    width: 90%;\\n    margin-left: 5%;\\n    border-radius: 10px;\\n    padding: 5px 10px;\\n}\\n\\n.command0, .command1\\n{\\n    background-color: #C0392B\\n}\\n\\n.command2, .command3, .command4, .command5\\n{\\n    background-color: #2980B9\\n}\\n\\n.command6\\n{\\n    background-color: #27AE60; \\n}\\n\\n.commandBlur\\n{\\n    background-color: #AAAAAA;\\n}\"","module.exports = \"<div style=\\\"width: 100%; overflow: auto; height: -webkit-fill-available;\\\">\\n    <div class=\\\"process\\\" *ngFor=\\\"let process of Processes; let ind = index\\\" style=\\\"display: table-cell; width: 235px; max-width: 235px; min-width: 235px; position: relative; left: -10px\\\">\\n        &nbsp;&nbsp;&nbsp;&nbsp;Name: {{process.Name}}\\n        <br><br>\\n        <div *ngFor=\\\"let command of process.Commands\\\" class=\\\"command\\\" [ngClass]=\\\"{ 'command0': (!isSimulation && command.Type==0) || (isSimulation && command.DisplayColor && processStatus[ind]), 'command1': !isSimulation && command.Type==1, 'command2': !isSimulation && command.Type==2, 'command3': !isSimulation && command.Type==3, 'command4': !isSimulation && command.Type==4, 'command5': !isSimulation && command.Type==5, 'command6': (!isSimulation && command.Type==6) || (isSimulation && command.DisplayColor && !processStatus[ind]), 'commandBlur': isSimulation && !command.DisplayColor}\\\">\\n            {{getText(command)}}\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ProcessCommandsModel } from '../Models/ProcessCommandsModel';\nimport { Helper } from '../Helper';\nimport { CommandModel } from '../Models/CommandModel';\nimport * as scrollIntoView from 'scroll-into-view';\n\n@Component({\n  selector: 'preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent {\n\n  @Input(\"processes\") Processes: ProcessCommandsModel[];\n  @Input(\"simulation\") isSimulation: boolean = false;\n  @Input(\"processStatus\") processStatus: boolean[];\n\n  constructor() { }\n\n  public getText(command: CommandModel): string\n  {\n    return Helper.GetText(command);\n  }\n\n  public FocusCommand(processNo: number, commandNo: number, undo: boolean, callback: any)\n  {\n\n    let commands: NodeListOf<Element> | HTMLCollectionOf<Element> = document.getElementsByClassName(\"process\")[processNo].getElementsByClassName(\"command\");\n    \n    if(commands.length>commandNo)\n    {\n      scrollIntoView(commands[commandNo], { time: 600 }, callback);\n    }\n    else if(undo && commands.length==commandNo)\n    {\n      callback();\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<span style=\\\"cursor: pointer;\\\">\\n    <mat-icon #imgBtn style=\\\"cursor: pointer;\\\">{{Img}}</mat-icon>   \\n    <span #text *ngIf=\\\"Text\\\" style=\\\"cursor: pointer; position:relative; top:-5px; margin-left: 10px\\\">{{Text}}</span>\\n</span>\"","import { Component, OnInit, Input, ElementRef, ViewChild, Renderer } from '@angular/core';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'refresh-button',\n  templateUrl: './refresh-button.component.html',\n  styleUrls: ['./refresh-button.component.css']\n})\nexport class RefreshButtonComponent implements OnInit {\n\n  private Enabled: boolean = true;\n  private RefreshInterval: number = 100;\n  @Input(\"isEnabled\") IsEnabled: any;\n  @Input(\"img\") Img: string;\n  @Input(\"text\") Text: string;\n  @Input(\"size\") Size: string;\n  @ViewChild(\"imgBtn\", { read: ElementRef }) Button: ElementRef;\n  @ViewChild(\"text\", { read: ElementRef }) Txt: ElementRef;\n\n  constructor(private Element: ElementRef, private renderer: Renderer) { }\n\n  ngOnInit() {\n    if(!isNullOrUndefined(this.IsEnabled))\n    {\n      setInterval(this.Check.bind(this), this.RefreshInterval);\n    }\n\n    if(!isNullOrUndefined(this.Size))\n    {\n      this.renderer.setElementStyle(this.Button.nativeElement, \"font-size\", this.Size+\"px\");\n    }\n  }\n\n  private Check() {\n    try\n    {\n      let newStatus: boolean = this.IsEnabled();\n\n      if(newStatus != this.Enabled)\n      {\n        this.Enabled = newStatus;\n\n        if(newStatus)\n        {\n          this.renderer.setElementStyle(this.Element.nativeElement, \"pointer-events\", \"inherit\");\n          this.renderer.setElementStyle(this.Button.nativeElement, \"opacity\", \"1\");\n          this.renderer.setElementStyle(this.Button.nativeElement, \"cursor\", \"pointer\");\n\n          if(this.Txt != null)\n          {           \n            this.renderer.setElementStyle(this.Txt.nativeElement, \"opacity\", \"1\");\n            this.renderer.setElementStyle(this.Txt.nativeElement, \"cursor\", \"pointer\");\n          }\n        }\n        else\n        {\n          \n          this.renderer.setElementStyle(this.Element.nativeElement, \"pointer-events\", \"none\");\n          this.renderer.setElementStyle(this.Button.nativeElement, \"opacity\", \"0.2\");\n          this.renderer.setElementStyle(this.Button.nativeElement, \"cursor\", \"not-allowed\");\n\n          if(this.Txt != null)\n          {\n            this.renderer.setElementStyle(this.Txt.nativeElement, \"opacity\", \"0.2\");\n            this.renderer.setElementStyle(this.Txt.nativeElement, \"cursor\", \"not-allowed\");\n          }\n        }\n      }\n    }\n    catch(Err){}\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"background-color: #DDDDDD; padding-top: 10px; margin-bottom: 15px\\\">\\n  <div style=\\\"width: 25%; margin-left: 12.5%; float: left\\\">\\n    Threads:<br>\\n    <div *ngFor=\\\"let process of Processes\\\" style=\\\"padding:5px 0\\\">\\n      <span style=\\\"width: calc(80% - 70px); display: inline-block\\\">{{process.Name}}</span> <input min=\\\"1\\\" (change)=\\\"threadCountChanged()\\\" [max]=\\\"process.Value + 8 - CurrentMax\\\"  type=\\\"number\\\" [(ngModel)]=\\\"process.Value\\\" style=\\\"width:50px; margin-left: 10px\\\">\\n    </div>\\n  </div>\\n  <div style=\\\"width: 25%; float: left\\\">\\n    Semaphores:<br>\\n    <div *ngFor=\\\"let sem of Settings.Semaphores\\\" style=\\\"padding:5px 0\\\">\\n      <span style=\\\"width: calc(80% - 70px); display: inline-block\\\">{{sem.Name}}</span> <input min=\\\"0\\\"  type=\\\"number\\\" [(ngModel)]=\\\"sem.Value\\\" style=\\\"width:50px; margin-left: 10px\\\">\\n    </div>\\n  </div>\\n  <div style=\\\"width: 25%; float: left\\\">\\n    Variables:<br>\\n    <div *ngFor=\\\"let variable of Settings.Variables\\\" style=\\\"padding:5px 0\\\">\\n      <span style=\\\"width: calc(80% - 70px); display: inline-block\\\">{{variable.Name}}</span> <input type=\\\"number\\\" [(ngModel)]=\\\"variable.Value\\\" style=\\\"width:50px; margin-left: 10px\\\">\\n    </div>\\n  </div> \\n  <br style=\\\"clear: both\\\"> \\n</div>\\n\\n<input type=\\\"radio\\\" [checked]=\\\"!Settings.DispatcherEnabled\\\" (change)=\\\"dispacherChanged()\\\"> Auto dispatcher\\n<input type=\\\"radio\\\" [checked]=\\\"Settings.DispatcherEnabled\\\" (change)=\\\"dispacherChanged()\\\" style=\\\"margin-left: 10px;\\\"> Controlled dispatcher\\n\\n<div *ngIf=\\\"Settings.DispatcherEnabled\\\" style=\\\"padding-top: 10px; white-space: nowrap\\\">  \\n  <smooth-dnd-container style=\\\"display: inline-block; width:32%; position: relative; top:-12px\\\" [orientation]=\\\"'horizontal'\\\" groupName=\\\"1\\\" behaviour=\\\"copy\\\" [getChildPayload]=\\\"getSource.bind(this)\\\">            \\n    <smooth-dnd-draggable *ngFor=\\\"let num of ThreadNumbers\\\">\\n      <div class=\\\"draggable-item-horizontal copy\\\" style=\\\"border:1px solid black; background-color: #DDDDDD; padding: 5px; display: inline-block\\\">\\n        {{num}}\\n      </div>\\n    </smooth-dnd-draggable>\\n  </smooth-dnd-container>\\n\\n  <div style=\\\"width:33%; display: inline-block\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"Text\\\" style=\\\"width: 100%\\\"><br>\\n    <refresh-button (click)=\\\"inputScenario()\\\" [img]=\\\"'arrow_downward'\\\" style=\\\"margin-left: calc(40% - 12px)\\\"></refresh-button>\\n    <refresh-button (click)=\\\"outputScenario()\\\" [img]=\\\"'arrow_upward'\\\" style=\\\"margin-left: calc(20% - 12px)\\\"></refresh-button>\\n  </div>\\n\\n  <div style=\\\"width:32%; display: inline-block\\\">\\n    <refresh-button (click)=\\\"importFromFile()\\\" [text]=\\\"'Import'\\\" [img]=\\\"'get_app'\\\" style=\\\"margin-left: calc(20% - 12px); position: relative; top:-12px; left: 30%\\\"></refresh-button>\\n  </div>\\n\\n  <smooth-dnd-container (drop)=\\\"onDrop($event)\\\" [getChildPayload]=\\\"getTarget.bind(this)\\\" groupName=\\\"1\\\" style=\\\"background: #DDDDDD; height: 47px; overflow-x: auto; position: relative; top:15px; white-space: nowrap; display: block\\\" [orientation]=\\\"'horizontal'\\\">            \\n    <smooth-dnd-draggable *ngFor=\\\"let num of Settings.Dispatcher; let ind = index\\\">\\n      <div [contextMenu]=\\\"basicMenu\\\" [contextMenuSubject]=\\\"ind\\\" class=\\\"draggable-item-horizontal\\\" style=\\\"border:1px solid black; background-color: #DDDDDD; padding: 5px; display: inline-block\\\">\\n        {{num}}\\n      </div>\\n    </smooth-dnd-draggable>\\n  </smooth-dnd-container>\\n</div>\\n\\n<input #fileDialog type=\\\"file\\\" accept=\\\".disp\\\" (change)=\\\"readFromFile()\\\" hidden/>\\n<context-menu #basicMenu>\\n  <ng-template contextMenuItem (execute)=\\\"deleteFromMenu($event.item)\\\">\\n    Delete\\n  </ng-template>\\n</context-menu>\"","import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\nimport { ExecutionSettingsModel } from '../Models/ExecutionSettingsModel';\nimport { ProgramModel } from '../Models/ProgramModel';\nimport { InitialValueModel } from '../Models/InitialValueModel';\nimport { ExecutableProgramModel } from '../Models/ExecutableProgramModel';\nimport { Helper } from '../Helper';\nimport { ProcessCountModel } from '../Models/ProcessCountModel';\nimport { ProcessCommandsModel } from '../Models/ProcessCommandsModel';\nimport { BlockType } from '../Enums/BlockType';\nimport { BlockModel } from '../Models/BlockModel';\nimport { SemaphorBlockModel } from '../Models/SemaphorBlockModel';\nimport { VariableBlockModel } from '../Models/VariableBlockModel';\n\n@Component({\n  selector: 'settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  @Input(\"program\") Program: ProgramModel;\n  @Input(\"settings\") Settings: ExecutionSettingsModel;\n  @ViewChild(\"fileDialog\") File: ElementRef;\n  public Processes: ProcessCountModel[];\n  public CurrentMax: number;\n  public ThreadNumbers: number[];\n  public Text: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.Settings.Variables = [];\n    this.Settings.Semaphores = [];\n    this.Processes = [];\n    this.CurrentMax = this.Program.ProcessCount();\n    this.InitThreadNumbers();\n\n    for(let process = 0; process<this.Program.ProcessCount(); process++)\n    {\n      let pcm: ProcessCountModel = new ProcessCountModel();\n      pcm.Name = this.Program.Processes[process].Name;\n      pcm.Value = 1;\n\n      this.Processes.push(pcm);\n\n      for(let block = 0; block < this.Program.Processes[process].Blocks.length; block++)\n      {\n        let ivm: InitialValueModel;\n\n        switch(this.Program.Processes[process].Blocks[block].Type)\n        {\n          case BlockType.SEMAPHOR:\n            if(this.Settings.Semaphores.find(x=>x.Name == (<SemaphorBlockModel>this.Program.Processes[process].Blocks[block]).SemaphorName) == null)\n            {\n              ivm = new InitialValueModel();\n\n              ivm.Value = 1;\n              ivm.Name = (<SemaphorBlockModel>this.Program.Processes[process].Blocks[block]).SemaphorName;\n\n              this.Settings.Semaphores.push(ivm);\n            }\n\n            break;\n          case BlockType.SHARED_VARIABLE:\n            if(this.Settings.Variables.find(x=>x.Name == (<VariableBlockModel>this.Program.Processes[process].Blocks[block]).VariableName) == null)\n            {\n              ivm = new InitialValueModel();\n\n              ivm.Value = 0;\n              ivm.Name = (<VariableBlockModel>this.Program.Processes[process].Blocks[block]).VariableName;\n\n              this.Settings.Variables.push(ivm);\n            }\n\n            break;\n        }\n      }\n    }\n  }\n\n  public removeAt(array: any[], index: number): void\n  {\n    array.splice(index, 1);\n  }\n\n  public insertAt(array: any[], index: number, item: any): void \n  {\n    array.splice(index, 0, item);\n  }\n\n  public dispacherChanged()\n  {\n    this.Settings.DispatcherEnabled = !this.Settings.DispatcherEnabled;\n     \n    let tmp: ExecutionSettingsModel = this.Settings;\n    this.Settings = null;\n    this.Settings = tmp;\n  }\n\n  public threadCountChanged()\n  {\n    let sum: number = 0;\n\n    this.Processes.forEach(pcm=>sum+=pcm.Value);\n\n    this.CurrentMax = sum;\n    this.InitThreadNumbers();\n  }\n\n  onDrop(dropResult: any, move: boolean) {\n\n    if(dropResult.droppedElement.className.indexOf(\"copy\") == -1)\n    {\n      this.removeAt(this.Settings.Dispatcher, dropResult.removedIndex);\n    }\n\n    this.insertAt(this.Settings.Dispatcher, dropResult.addedIndex, dropResult.payload);\n\t}\n\n  public InitThreadNumbers(): void {\n    let tmp: number[] = [];\n\n    for(let i=1;i<=this.CurrentMax;i++)\n    {\n      tmp.push(i);\n    }\n\n    this.ThreadNumbers = tmp;\n    \n    if(!this.Settings.Dispatcher)\n    {\n      this.Settings.Dispatcher = [];\n    }\n    \n    this.Settings.Dispatcher = this.Settings.Dispatcher.filter(num => num<=this.CurrentMax);\n  }\n\n  public getSource(ind: number)\n  {\n    return this.ThreadNumbers[ind];\n  }\n\n  public getTarget(ind: number)\n  {\n    return this.Settings.Dispatcher[ind];\n  }\n\n  private parseScenario(scenario: string)\n  {\n    if(scenario == undefined)\n    {\n      return;\n    }\n\n    let tmp: number[] = [];\n\n    for(let i=0;i<scenario.length; i++)\n    {\n      let num: number = +scenario.charAt(i);\n      \n      if(num == undefined || this.isCharacter(num.toString()))\n      {\n        alert(\"Parsing failed. Text should only contain numbers\");\n        return;\n      }\n      else if(num<1 || num>this.CurrentMax)\n      {\n        alert(\"Numbers must not be less then 0 or greater than current maximum number of processes\");\n        return;\n      }\n\n      tmp.push(num);\n    }\n\n    this.Settings.Dispatcher = tmp;\n  }\n\n  public isCharacter(c: string): boolean\n  {\n    return c.toLowerCase() != c.toUpperCase();\n  }\n\n  public inputScenario()\n  {\n    this.parseScenario(this.Text);\n  }\n\n  public outputScenario()\n  {\n    this.Text = \"\";\n    \n    this.Settings.Dispatcher.forEach(x=>this.Text+=x);\n  }\n\n  public importFromFile()\n  {\n    this.File.nativeElement.click();  \n  }\n\n  public readFromFile()\n  {\n    if(this.File.nativeElement.files && this.File.nativeElement.files[0])\n    {    \n      let reader: FileReader = new FileReader();\n      reader.onload = () => {  \n        this.File.nativeElement.value = \"\";\n        \n        let text: string = reader.result.toString();\n        this.parseScenario(text);\n      };\n      reader.readAsText(this.File.nativeElement.files[0]);\n    }\n  }\n\n  public deleteFromMenu(index: number)\n  {\n    this.removeAt(this.Settings.Dispatcher, index);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"width: 100%; height: 5%;\\\">\\n    <refresh-button [isEnabled]=\\\"StartAutoDisplayCmd_CanExecute.bind(this)\\\" (click)=\\\"StartAutoDisplayCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 5px;\\\" [text]=\\\"'Autorun'\\\" [img]=\\\"'play_circle_filled'\\\"></refresh-button>\\n    <refresh-button [isEnabled]=\\\"PauseAutoDisplayCmd_CanExecute.bind(this)\\\" (click)=\\\"PauseAutoDisplayCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 20px;\\\" [text]=\\\"'Pause'\\\" [img]=\\\"'pause_circle_filled'\\\"></refresh-button>\\n    <refresh-button [isEnabled]=\\\"PreviousLogCmd_CanExecute.bind(this)\\\" (click)=\\\"PreviousLogCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 20px;\\\" [text]=\\\"'Previous'\\\" [img]=\\\"'skip_previous'\\\"></refresh-button>\\n    <refresh-button [isEnabled]=\\\"NextLogCmd_CanExecute.bind(this)\\\" (click)=\\\"NextLogCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 20px;\\\" [text]=\\\"'Next'\\\" [img]=\\\"'skip_next'\\\"></refresh-button>\\n    <refresh-button [isEnabled]=\\\"ResetSimulationCmd_CanExecute.bind(this)\\\" (click)=\\\"ResetSimulationCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 20px;\\\" [text]=\\\"'Reset'\\\" [img]=\\\"'settings_backup_restore'\\\"></refresh-button>\\n    <refresh-button (click)=\\\"NewSimulationCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 20px;\\\" [text]=\\\"'Generate new scenario'\\\" [img]=\\\"'autorenew'\\\"></refresh-button>\\n    <refresh-button (click)=\\\"ExportCmd_Execute()\\\" style=\\\"position:relative; top:7px; margin-left: 20px;\\\" [text]=\\\"'Export execution scenario'\\\" [img]=\\\"'get_app'\\\"></refresh-button>\\n</div>\\n\\n<div style=\\\"height: 60vh; margin-top:5px\\\">\\n    <div style=\\\"width: 60%; max-width: 60%; overflow: auto; float: left; height: 100%; padding: 10px; display: flex;justify-content: center;align-items: center;\\\">\\n        <div style=\\\"height:98%; margin:auto; display: inline-block; width: 100%\\\">\\n            <preview #preview simulation=\\\"true\\\" [processes]=\\\"ExecutableProgram.Processes\\\" [processStatus]=\\\"IsSuspended\\\"></preview>\\n        </div>\\n    </div>\\n\\n    <div style=\\\"width:30%; float: left; height: 100%; padding-top:30px; padding-left: 30px\\\">\\n        Variables:<br><br>\\n        <div *ngFor=\\\"let value of VariableValues\\\">\\n            <span style=\\\"width:130px; display: inline-block\\\">{{value.Name}}</span>{{value.Value}}\\n        </div>\\n        <br><br><br>\\n        Semaphores:<br><br>\\n        <div *ngFor=\\\"let value of SemaphoreValues\\\">\\n            <span style=\\\"width:130px; display: inline-block\\\">{{value.Name}}</span>{{value.Value}}\\n        </div>\\n    </div>\\n</div>\\n\\n<div style=\\\"width:100%; max-height: 27vh; clear:both; overflow: auto; margin-top: 50px\\\">\\n    <table mat-table [dataSource]=\\\"LogData\\\" style=\\\"width: 99%; margin-left: 5px; box-shadow: none;\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"process\\\">\\n        <th mat-header-cell *matHeaderCellDef>Process</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:10%; border: none\\\"> {{element.Process}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef>Description</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:30%; border: none\\\"> {{element.Description}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"states\\\">\\n        <th mat-header-cell *matHeaderCellDef>Variable states</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:60%; border: none\\\"> {{element.States}} </td>\\n      </ng-container>\\n  \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" style=\\\"height: 28px\\\"></tr>\\n        <tr class=\\\"row\\\" mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" style=\\\"height: 22px\\\"></tr>\\n  </table>\\n</div>\\n\\n<ngx-spinner\\nbdColor = \\\"rgba(51, 51, 51, 0.8)\\\"\\nsize = \\\"large\\\"\\ncolor = \\\"#fff\\\"\\ntype = \\\"timer\\\"\\n></ngx-spinner>\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { ExecutableProgramModel } from '../Models/ExecutableProgramModel';\nimport { BaseLogModel } from '../Models/BaseLogModel';\nimport { LocalStorageService } from 'ngx-localstorage';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\nimport { Helper } from '../Helper';\nimport { PrintedLogModel } from '../Models/PrintedLogModel';\nimport { ProcessCommandsModel } from '../Models/ProcessCommandsModel';\nimport { ApiRequestService } from '../api-request.service';\nimport { ExecutionSettingsModel } from '../Models/ExecutionSettingsModel';\nimport { LogModel } from '../Models/LogModel';\nimport { LogType } from '../Enums/LogType';\nimport { SemaphoreLogModel } from '../Models/SemaphoreLogModel';\nimport { InitialValueModel } from '../Models/InitialValueModel';\nimport { VariableLogModel } from '../Models/VariableLogModel';\nimport { PreviewComponent } from '../preview/preview.component';\nimport { MatTableDataSource } from '@angular/material';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport * as scrollIntoView from 'scroll-into-view';\n\n@Component({\n  selector: 'simulation',\n  templateUrl: './simulation.component.html',\n  styleUrls: ['./simulation.component.css']\n})\nexport class SimulationComponent {\n\n  public ExecutableProgram: ExecutableProgramModel;\n  public Logs: BaseLogModel[];  \n  public NewSimulation: boolean;\n  public LogOutput: PrintedLogModel[];\n  public VariableValues: InitialValueModel[];\n  public SemaphoreValues: InitialValueModel[];\n  private variables: InitialValueModel[];\n  private semaphores: InitialValueModel[];\n  public CurrentLog: number;\n  public displayedColumns: string[] = ['process', 'description', 'states'];\n  private TICK: number = 1500;\n  private timerIsRunning: boolean;\n  private timer: any;\n  private processPositions: number[];\n  public IsSuspended: boolean[];\n  private previousValues: any;\n  public LogData: MatTableDataSource<PrintedLogModel>;\n\n  @ViewChild(\"preview\") preview: PreviewComponent;\n\n  constructor(private localStorage: LocalStorageService, private router: Router, private apiService: ApiRequestService, private spinner: NgxSpinnerService) {\n    let data: string = localStorage.get(\"SIMULATION\");\n\n    if(data)\n    {\n      let dataObj: any = JSON.parse(data);\n\n      this.ExecutableProgram = ExecutableProgramModel.Deserialize(dataObj.Program);\n      this.Logs = Helper.DeserializeLogs(dataObj.Logs);\n      this.variables = dataObj.Variables;\n      this.semaphores = dataObj.Semaphores;\n  \n      this.processPositions = [];\n      this.IsSuspended = [];\n\n      this.LogOutput = [];\n      this.previousValues = {};\n      \n      this.Initialize();\n    }\n    else\n    {\n      router.navigate([\"/\"]);\n    }\n  }\n\n  public NewSimulationCmd_Execute()\n  {\n      if(this.timerIsRunning)\n      {\n        this.PauseAutoDisplayCmd_Execute();\n      }\n\n      this.spinner.show();\n      this.NewSimulation = true;\n\n      let settingsData: string = this.localStorage.get(\"SETTINGS_DATA_FOR_REGENERATE\");\n      \n      let settings: ExecutionSettingsModel = JSON.parse(settingsData);\n\n      this.apiService.simulate({ Program: this.ExecutableProgram, Settings: settings}).subscribe(data => {\n        this.Logs = Helper.DeserializeLogs(data);\n\n        this.localStorage.set(\"SIMULATION\", JSON.stringify({\n          Program: this.ExecutableProgram,\n          Logs: this.Logs\n        }));\n\n        this.ResetSimulationCmd_Execute();\n\n        this.spinner.hide();\n      });\n  }\n\n  private download(filename: string, text: string) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  }\n\n  public ExportCmd_Execute()\n  {\n    let current: Date = new Date(Date.now());\n\n    let date: string = current.getFullYear()+\"-\"+current.getDate()+\"-\"+current.getMonth()+\"-\"+current.getHours()+\"-\"+current.getMonth()+\"-\"+current.getSeconds();\n    let name: string = \"scenario-\" + this.ExecutableProgram.Name + \"-\" + date + \".disp\";\n\n    let content: string = \"\";\n    this.Logs.forEach(x=>{\n      if(x instanceof LogModel)\n      {\n        content+= (+(<LogModel>x).Process)+1;\n      }\n    });\n\n    this.download(name, content);\n  }\n\n  public GenerateDeadlockLog()\n  {\n      let printLog: PrintedLogModel = new PrintedLogModel();\n      \n      printLog.Description = \"Deadlock has been detected\";\n\n      printLog.States = this.GetStates();\n\n      this.ShowLog(printLog);\n  }\n\n  private ShowLog(printLog: PrintedLogModel)\n  {     \n    this.LogOutput.push(printLog);\n  }\n\n  public GenerateLogOutput(logModel: LogModel)\n  {\n      let printLog: PrintedLogModel = new PrintedLogModel();\n\n      printLog.Process = ((+logModel.Process)+1).toString();\n\n      if (logModel.Type == LogType.DISPATCHER_SKIP)\n      {\n          printLog.Description = \"----------\";\n      }\n      else if (logModel.Type == LogType.DEADLOCK || logModel.Type == LogType.ALL_SUSPENDED)\n      {\n          printLog.Description = \"Deadlock has been detected\";\n      }\n      else if (logModel.Type == LogType.AWAKE_PROCESS)\n      {\n          printLog.Description = \"Process has been deblocked\";\n      }\n      else if (logModel instanceof SemaphoreLogModel)\n      {\n          let semLog: SemaphoreLogModel = <SemaphoreLogModel>logModel;\n\n          switch (semLog.Type)\n          {\n              case LogType.ENTER_REGION:\n                  printLog.Description = \"###Enter critical region \"+semLog.Semaphore+\"###\"\n                  break;\n              case LogType.EXIT_REGION:\n                  printLog.Description = \"###Exit critical region \"+semLog.Semaphore+\"###\"\n                  break;\n              case LogType.SUSPENDED:\n                  printLog.Description = \"###Blocked on \"+semLog.Semaphore+\"###\"\n                  break;\n          }\n      }\n      else\n      {\n          printLog.Description = Helper.GetText(logModel.Command);\n      }\n\n      printLog.States = this.GetStates();\n      this.ShowLog(printLog);\n  }\n\n  private GetStates(): string\n  {\n      let text: string = \"\";\n\n      if(this.VariableValues.length>0)\n      {\n          let first: boolean = true;\n          text = \"Variables: \";\n\n          this.VariableValues.forEach(ivm=>\n          {\n            if (!first)\n            {\n                text+=\"; \";\n            }\n\n            text+=ivm.Name+\"=\"+ivm.Value;\n\n            first = false;\n          });\n\n          text+=\";        \";\n      }\n      if (this.SemaphoreValues.length>0)\n      {\n          let first: boolean = true;\n          text += \"Semaphores: \";\n\n          this.SemaphoreValues.forEach(ivm=>\n          {\n            if (!first)\n            {\n                text+=\"; \";\n            }\n\n            text+=ivm.Name+\"=\"+ivm.Value;\n\n            first = false;\n          });\n      }\n\n      return text;\n  }\n\n  private AddLog(log: BaseLogModel)\n  {\n      if (log.Type == LogType.DEADLOCK || log.Type == LogType.ALL_SUSPENDED)\n      {\n          this.GenerateDeadlockLog();\n      }\n      else\n      {\n          this.GenerateLogOutput(<LogModel>log);\n      }\n\n      this.LogData = new MatTableDataSource<PrintedLogModel>(this.LogOutput);\n  }\n\n  public PreviousLogCmd_Execute()\n  {\n      if (this.CurrentLog < this.Logs.length)\n      {\n          this.UndoCommand(this.Logs[this.CurrentLog]);\n      }\n\n      this.CurrentLog--;\n  }\n\n  public PreviousLogCmd_CanExecute()\n  {\n      return !this.timerIsRunning && this.CurrentLog > -1;\n  }\n\n  public NextLogCmd_Execute()\n  {\n      this.CurrentLog++;\n\n      if(this.CurrentLog < this.Logs.length)\n      {\n          this.ExecuteCommand(this.Logs[this.CurrentLog]);\n      }\n  }\n\n  public NextLogCmd_CanExecute()\n  {\n      return !this.timerIsRunning && this.CurrentLog < this.Logs.length - 1;\n  }\n\n  public ResetSimulationCmd_Execute()\n  {\n      this.Initialize();\n  }\n\n  public ResetSimulationCmd_CanExecute()\n  {\n      return !this.timerIsRunning && this.CurrentLog != -1;\n  }\n\n  public PauseAutoDisplayCmd_Execute()\n  {\n      clearInterval(this.timer);\n      this.timerIsRunning = false;\n  }\n\n  public PauseAutoDisplayCmd_CanExecute()\n  {\n      return this.timerIsRunning;\n  }\n\n  public StartAutoDisplayCmd_Execute()\n  {\n      this.timerIsRunning = true;\n      this.timer = setInterval(this.Timer_Elapsed.bind(this), this.TICK);\n  }\n\n  public StartAutoDisplayCmd_CanExecute()\n  {\n      return !this.timerIsRunning && this.CurrentLog < this.Logs.length - 1;\n  }\n\n  private Timer_Elapsed()\n  {\n      this.CurrentLog++;\n\n      if (this.CurrentLog < this.Logs.length)\n      {\n          this.ExecuteCommand(this.Logs[this.CurrentLog]);\n      }\n      else\n      {\n          clearInterval(this.timer);\n          this.timerIsRunning = false;\n      }\n  }\n\n  private CloneList(listToClone: InitialValueModel[]): InitialValueModel[]\n  {\n      let list: InitialValueModel[] = [];\n\n      listToClone.forEach(ivm => {\n        let tmp: InitialValueModel = new InitialValueModel();\n\n        tmp.Name = ivm.Name;\n        tmp.Value = ivm.Value;\n\n        list.push(tmp);\n      });     \n\n      return list;\n  }\n\n  protected Initialize()\n  {\n      this.CurrentLog = -1;\n      this.VariableValues = this.CloneList(this.variables);\n      this.SemaphoreValues = this.CloneList(this.semaphores);\n\n      this.IsSuspended = [];\n      this.processPositions = [];\n\n      for (let i = 0; i < this.ExecutableProgram.ProcessCount(); i++) \n      {\n          this.IsSuspended.push(false);\n          this.processPositions.push(0);\n          this.DisplayColor(i, 0);\n      }\n\n      this.LogOutput = [];\n      this.LogData = new MatTableDataSource<PrintedLogModel>(this.LogOutput);\n\n      this.previousValues = {};\n\n      this.VariableValues.forEach(ivm=>{\n        this.previousValues[ivm.Name] = [];\n      });\n  }\n\n  private DisplayColor(processNo: number, commandNo: number)\n  {\n      this.ExecutableProgram.Processes[processNo].Commands.forEach(x => x.DisplayColor = false);\n\n      if (commandNo >= 0 && commandNo < this.ExecutableProgram.Processes[processNo].CommandCount())\n      {\n          this.ExecutableProgram.Processes[processNo].Commands[commandNo].DisplayColor = true;\n      }\n  }\n\n  private Focus(process: number, undo: boolean, callback: any)\n  {\n    this.preview.FocusCommand(process, this.processPositions[process], undo, callback);\n  }\n\n  public ExecuteCommand(log: BaseLogModel)\n  {\n      let logModel: LogModel;\n      \n      if(log instanceof LogModel)\n      {\n        logModel = <LogModel>log;\n      }\n\n      let valuedLog: VariableLogModel;\n      let semaphoreLog: SemaphoreLogModel;\n\n      if (logModel != null)\n      {\n          this.Focus(logModel.Process, false, () => { setTimeout(() => {\n            if (log.Type == LogType.SET_VALUE)\n            {\n                valuedLog = <VariableLogModel>log;\n                let variable: InitialValueModel = this.VariableValues.find(x => x.Name == valuedLog.Variable);\n      \n                this.previousValues[valuedLog.Variable].push(variable.Value);\n                variable.Value = valuedLog.Value;\n      \n                this.AddLog(log);\n            }\n            else if (log.Type == LogType.ENTER_REGION)\n            {\n                semaphoreLog = <SemaphoreLogModel>log;\n      \n                let semaphore: InitialValueModel = this.SemaphoreValues.find(x => x.Name == semaphoreLog.Semaphore);\n                semaphore.Value--;\n      \n                this.AddLog(log);\n            }\n            else if (log.Type == LogType.EXIT_REGION)\n            {\n                semaphoreLog = <SemaphoreLogModel>log;\n      \n                 let semaphore: InitialValueModel = this.SemaphoreValues.find(x => x.Name == semaphoreLog.Semaphore);\n                semaphore.Value++;\n      \n                this.AddLog(log);\n            }\n            else if (log.Type == LogType.SUSPENDED)\n            {\n                semaphoreLog = log as SemaphoreLogModel;\n      \n                this.IsSuspended[semaphoreLog.Process] = true;\n                \n                this.AddLog(log);\n                return;\n            }\n            else if(log.Type == LogType.AWAKE_PROCESS)\n            {\n                this.IsSuspended[logModel.Process] = false;\n                \n                this.AddLog(log);\n                return;\n            }\n            else if(log.Type==LogType.DEADLOCK || log.Type == LogType.ALL_SUSPENDED)\n            {\n                this.AddLog(log);\n                return;\n            }\n      \n            if(log.Type!=LogType.DISPATCHER_SKIP)\n            {\n                this.processPositions[logModel.Process]++;\n            }\n      \n            this.DisplayColor(logModel.Process, this.processPositions[logModel.Process]);\n            this.refresh();\n        }, 300)});\n      }\n  }\n\n  private refresh(): void\n  {\n      let tmp: boolean[] = this.IsSuspended;\n      this.IsSuspended = null;\n      this.IsSuspended = tmp;\n\n      let rows: HTMLCollectionOf<Element> = document.getElementsByClassName(\"row\");\n\n      if(rows.length>0)\n      {\n          scrollIntoView(rows[rows.length-1], { time: 300 });\n      }\n  }\n\n  public UndoCommand(log: BaseLogModel)\n  {\n      if(!log)\n      {\n          return;\n      }\n\n      let logModel: LogModel;\n      \n      if(log instanceof LogModel)\n      {\n        logModel=<LogModel>log;\n      }\n\n      let valuedLog: VariableLogModel;\n      let semaphoreLog: SemaphoreLogModel;\n\n      if (logModel != null)\n      {\n          this.Focus(logModel.Process, true, () => { setTimeout(() => {\n            if (log.Type == LogType.SET_VALUE)\n            {\n                valuedLog = <VariableLogModel>log;\n                let variable: InitialValueModel = this.VariableValues.find(x => x.Name == valuedLog.Variable);\n                \n                variable.Value = this.previousValues[valuedLog.Variable][this.previousValues[valuedLog.Variable].length-1];\n                this.previousValues[valuedLog.Variable].pop();\n      \n                this.LogOutput.pop();\n            }\n            else if (log.Type == LogType.ENTER_REGION)\n            {\n                semaphoreLog = <SemaphoreLogModel>log;\n      \n                let semaphore: InitialValueModel = this.SemaphoreValues.find(x => x.Name == semaphoreLog.Semaphore);\n                semaphore.Value++;\n      \n                this.LogOutput.pop();\n            }\n            else if(log.Type == LogType.SUSPENDED)\n            {\n                semaphoreLog = <SemaphoreLogModel>log;\n      \n                this.IsSuspended[semaphoreLog.Process] = false;\n      \n                this.LogOutput.pop();\n                this.refresh();\n      \n                return;\n            }\n            else if(log.Type == LogType.AWAKE_PROCESS)\n            {\n                this.IsSuspended[logModel.Process] = true;\n      \n                this.LogOutput.pop();\n                this.refresh();\n      \n                return;\n            }\n            else if (log.Type == LogType.EXIT_REGION)\n            {\n                semaphoreLog = <SemaphoreLogModel>log;\n      \n                let semaphore: InitialValueModel = this.SemaphoreValues.find(x => x.Name == semaphoreLog.Semaphore);\n                semaphore.Value--;\n      \n                this.LogOutput.pop();\n            }\n            else if (log.Type == LogType.DEADLOCK || log.Type == LogType.ALL_SUSPENDED)\n            {\n                this.LogOutput.pop();\n                this.refresh();\n      \n                return;\n            }\n      \n            if (log.Type != LogType.DISPATCHER_SKIP)\n            {\n                this.processPositions[logModel.Process]--;\n            }\n      \n            this.DisplayColor(logModel.Process, this.processPositions[logModel.Process]);\n            this.LogData = new MatTableDataSource<PrintedLogModel>(this.LogOutput);\n            this.refresh();\n          }, 300)});\n      }     \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}